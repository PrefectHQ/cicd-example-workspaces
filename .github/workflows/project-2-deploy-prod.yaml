name: Build image and deploy Prefect flow - production

env:
  PROJECT_NAME: project_2

on:
  push:
    branches:
      - main
    paths:
      - "project_2/**"

jobs:
  deploy:
    name: Deploy to production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get commit hash
        id: get-commit-hash
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Build and push
        id: build-docker-image
        env:
            GITHUB_SHA: ${{ steps.get-commit-hash.outputs.COMMIT_HASH }}
        uses: docker/build-push-action@v5
        with:
          context: $PROJECT_NAME/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.PROJECT_NAME }}:${{ env.GITHUB_SHA }}-prod
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update image Prefect Variable
        env:
          PREFECT_API_KEY: ${{ secrets.PREFECT_API_KEY }}
          PREFECT_API_URL: ${{ secrets.PREFECT_PROD_WORKSPACE_URL }}
          VARIABLE_NAME: $PROJECT_NAME_image
          VARIABLE_VALUE: ${{ steps.build-docker-image.outputs.image_id }}
        run: update_variable.sh

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Prefect Deploy
        env:
          PREFECT_API_KEY: ${{ secrets.PREFECT_API_KEY }}
          PREFECT_API_URL: ${{ secrets.PREFECT_PROD_WORKSPACE_URL }}
          IMAGE_ID: ${{ steps.build-docker-image.outputs.image_id }}
        run: |
          pip install -r requirements.txt
          prefect deploy --all --prefect-file $PROJECT_NAME/prefect.yaml
